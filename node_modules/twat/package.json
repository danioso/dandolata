{
  "name": "twat",
  "version": "0.8.5",
  "description": "Simple Twitter Streaming for Node.js",
  "keywords": [
    "twitter",
    "streaming",
    "oauth"
  ],
  "homepage": "https://github.com/mileszim/twat",
  "author": {
    "name": "Miles Zimmerman"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/mileszim/twat"
  },
  "dependencies": {
    "oauth": ">=0.8.4"
  },
  "devDependencies": {
    "should": "*",
    "mocha": "*"
  },
  "engines": {
    "node": ">=0.4.0"
  },
  "main": "./lib/twat",
  "readme": "Twat: Simple Twitter Streaming for Node.js\n==========================================\n\nTwat is a heavily-modified version of AvianFlu's [ntwitter](http://github.com/AvianFlu/ntwitter), which is an improved version of jdub's [node-twitter](http://github.com/jdub/node-twitter), which in turn was inspired by, and uses some code from, technoweenie's [twitter-node](http://github.com/technoweenie/twitter-node).\n\nThe goal of Twat is to provide an extremely easy, consistent connection to Twitter's streaming API, and handle reconnection (including backoff strategies) automatically so you don't have to.\n\n\n## Installation\n\nYou can install Twat and its dependencies with npm: `npm install twat`.\n\n\n### Setup API \n\nThe keys listed below can be obtained from [dev.twitter.com](http://dev.twitter.com) after [setting up a new App](https://dev.twitter.com/apps/new).\n\n``` javascript\nvar Twat = require('twat');\n\nvar twit = new Twat({\n  consumer_key: 'Twitter',\n  consumer_secret: 'API',\n  access_token: 'keys',\n  access_token_secret: 'go here'\n});\n```\n\n\n### Streaming\n\nThe stream() callback receives a Stream-like EventEmitter.\n\nHere is an example of how to call the `statuses/sample` method:\n\n``` javascript\ntwit.stream('statuses/sample', function(stream) {\n  stream.on('tweet', function(tweet) {\n    console.log(tweet);\n  });\n});\n```\n        \nHere is an example of how to call the 'statuses/filter' method with a bounding box over San Fransisco and New York City ( see streaming api for more details on [locations](https://dev.twitter.com/docs/streaming-api/methods#locations) ):\n\n``` javascript\ntwit.stream('statuses/filter', {'locations':'-122.75,36.8,-121.75,37.8,-74,40,-73,41'}, function(stream) {\n  stream.on('tweet', function(tweet) {\n    console.log(tweet);\n  });\n});\n```\n\nTwat also supports user and site streams:\n\n``` javascript\ntwit.stream('user', {track:'nodejs'}, function(stream) {\n  stream.on('tweet', function (tweet) {\n    console.log(tweet);\n  });\n  stream.on('end', function(response) {\n    // Handle a disconnection\n  });\n  stream.on('destroy', function(response) {\n    // Handle a 'silent' disconnection from Twitter, no end/error event fired\n  });\n  // Disconnect stream after five seconds\n  setTimeout(stream.destroy, 5000);\n});\n```\n\n\n### Stream Listener Options\n\n#### data\n\nTo get tweets from the stream:\n\n``` javascript\ntwit.stream('statuses/sample', function(stream) {\n  stream.on('tweet', function(tweet) {\n    console.log(tweet);\n  });\n});\n```\n\n#### error\n\nTwat will emit an error if there is a problem with the stream (auto-reconnect or not)\n\n``` javascript\ntwit.stream('statuses/sample', function(stream) {\n  stream.on('error', function(type, info) {\n    console.log(type + \" \" + info);\n  });\n});\n```\n\n#### reconnect\n\nWhen Twat begins auto reconnection, it will emit reconnect status for every attempt\n\n``` javascript\ntwit.stream('statuses/sample', function(stream) {\n  stream.on('reconnect', function(info) {\n    console.log(info.error);    // The error causing reconnection\n    console.log(info.attempts); // Number of reconnects attempted\n  });\n});\n```\n\n#### end\n\nIf Twitter sends a FIN packet to end the open connection, Twat emits an end\n\n``` javascript\ntwit.stream('statuses/sample', function(stream) {\n  stream.on('end', function(response) {\n    console.log(response);\n  });\n});\n```\n\n#### destroy\n\nWhen the connection to Twitter ends, Twat also emits a destroy to signal the socket has closed\n\n``` javascript\ntwit.stream('statuses/sample', function(stream) {\n  stream.on('destroy', function(msg) {\n    console.log(msg);\n  });\n});\n```\n\n\n\n## Contributors\n\n[Lots of people contribute to this project. You should too!](https://github.com/mileszim/twat/contributors)",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mileszim/twat/issues"
  },
  "_id": "twat@0.8.5",
  "_from": "twat@"
}
